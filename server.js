const express = require('express');
const fs = require('fs');
const path = require('path');
const cookieParser = require('cookie-parser');

const app = express();
const port = process.env.PORT || 3000;

app.use(cookieParser());
app.use(express.json());

// üîê –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞: –æ—Ç–¥–∞—Ç—å index.html c –ø–æ–¥–º–µ–Ω–æ–π –ø—É—Ç–µ–π
app.get('/protected-lesson/:lessonId', (req, res) => {
  const token = req.cookies['sb-access-token'];
  if (!token) {
    return res.status(401).send('‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞: –≤—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã');
  }

  const lessonId = req.params.lessonId;
  const filePath = path.join(__dirname, 'lessons', lessonId, 'index.html');

  if (!fs.existsSync(filePath)) {
    return res.status(404).send('‚õî –£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }

  let html = fs.readFileSync(filePath, 'utf8');

  // üîÅ –ó–∞–º–µ–Ω–∏–º –ø—É—Ç–∏ –≤ HTML –Ω–∞ –∑–∞—â–∏—â—ë–Ω–Ω—ã–µ
  html = html.replace(/href="style.css"/g, `href="/protected-lesson/${lessonId}/style.css"`);
  html = html.replace(/src="script.js"/g, `src="/protected-lesson/${lessonId}/script.js"`);
  html = html.replace(/src="audioL1\//g, `src="/protected-lesson/${lessonId}/audioL1/`);

  res.send(html);
});

// üîê –ó–∞—â–∏—â—ë–Ω–Ω–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –ª—é–±—ã—Ö —Ñ–∞–π–ª–æ–≤: CSS, JS, MP3 –∏ —Ç.–¥.
app.get('/protected-lesson/:lessonId/*', (req, res) => {
  const token = req.cookies['sb-access-token'];
  if (!token) {
    return res.status(401).send('‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É');
  }

  const lessonId = req.params.lessonId;
  const requestedPath = req.params[0]; // –≤—Å—ë, —á—Ç–æ –ø–æ—Å–ª–µ /:lessonId/
  const filePath = path.join(__dirname, 'lessons', lessonId, requestedPath);

  if (!fs.existsSync(filePath)) {
    return res.status(404).send('‚õî –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }

  res.sendFile(filePath);
});

// üè† –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
app.get('/', (req, res) => {
  res.send(`<h2>–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç</h2><p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ <a href="/protected-lesson/lesson1">–ø–µ—Ä–µ–π—Ç–∏ –∫ —É—Ä–æ–∫—É</a></p>`);
});

app.listen(port, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${port}`);
});
